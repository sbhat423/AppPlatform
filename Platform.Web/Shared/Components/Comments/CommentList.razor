@using Models.DTOs.Comment
@using Platform.Web.Services.Interfaces
@using Platform.Web.Shared.Components;
@using Platform.Web.Shared.Components.SubComments;

@inject ICommentDataService CommentService
@inject NavigationManager NavigationManager

@foreach (var comment in _comments)
{
   <CommentDisplay Comment="comment" OnCommentDelete="DeleteComment"/>
}

@code {
    [Parameter]
    public int PostId { get; set; }

    private IEnumerable<CommentDto> _comments { get; set; } = new List<CommentDto>();

    protected override async Task OnInitializedAsync()
    {
        _comments = await CommentService.ListByPostId(PostId);
    }

    private async Task DeleteComment(int commentId)
    {
        await CommentService.Delete(commentId);
        _comments = _comments.Where(x => x.Id != commentId);
    }
}
