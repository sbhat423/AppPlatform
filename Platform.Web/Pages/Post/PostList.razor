@page "/posts"

@using Models.DTOs.Post
@using Platform.Web.Services.Interfaces
@using Platform.Web.Shared.Components;
@using Platform.Web.Shared.Components.Comments

@inject IPostDataService PostService
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

@attribute [Authorize]

@if (_loading)
{
   <LoadingIndicator/>
}
else
{
    @foreach (var post in Posts)
    {
        <PostDisplay Post="post" />
    }
}

<button class="btn btn-primary" @onclick="CreatePost">Create</button>

@code {
    private IEnumerable<PostDto> Posts { get; set; } = new List<PostDto>();
    private bool _loading = false;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        Posts = await PostService.List();
        _loading = false;
    }

    private void CreatePost()
    {
        NavigationManager.NavigateTo("/post/create");
    }
}
